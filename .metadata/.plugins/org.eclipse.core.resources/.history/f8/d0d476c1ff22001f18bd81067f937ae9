import java.util.ArrayList;
import java.util.List;

public class SudokoSolver {

	public static void main(String[] args) {
		// Sudoku tahtasını tanımla
	
		int a = 2;
		
		char[][] board = { { '5', '3', '.', '.', '7', '.', '.', '.', '.' },
				{ '6', '.', '.', '1', '9', '5', '.', '.', '.' }, { '.', '9', '8', '.', '.', '.', '.', '6', '.' },
				{ '8', '.', '.', '.', '6', '.', '.', '.', '3' }, { '4', '.', '.', '8', '.', '3', '.', '.', '1' },
				{ '7', '.', '.', '.', '2', '.', '.', '.', '6' }, { '.', '6', '.', '.', '.', '.', '2', '8', '.' },
				{ '.', '.', '.', '4', '1', '9', '.', '.', '5' }, { '.', '.', '.', '.', '8', '.', '.', '7', '9' } };


		// Çözülmüş Sudoku tahtasını yazdır

	}
	


	public void solveSudoku(char[][] board) {

		

		for (int i = 0; i < board.length; i++) {
			for (int j = 0; j < board.length; j++) {

				if (board[i][j] == '.') {

					

					board[i][j] = change(board[i][j], i, j, board);
				}
			}
		}

		return board;

	}

	public char change(char c, int i, int j, char[][] board) {

		List<Character> charList = new ArrayList<Character>();

		// Kendi

	
		
		

		for (int x = 0; x <= 2; x++) {

			for (int y = 0; y <= 2; y++) {
				
				charList.add(board[i/3 + x][j/3 + y]);
			}

		}

		// Diğer satır ve stunlar
		for(int x = 0; x<board.length; x++ ) {
			charList.add(board[x][j]);
		}
		
		for(int x = 0; x<board.length; x++ ) {
			charList.add(board[i][x]);
		}
		
		int sayac = 0;
		for(char f = '1'; f<= '9'; f++) {
			sayac = 0;
			for(Character d: charList) {
				if(f == d) {
					sayac++;
					break;
				}
			}
			if(sayac == 0) {
				
				return f;
			}
			
		}
		
		
		if(i == 0) {
			return change(c, i, j-1, board);
		}else {
			return change(c, i, j, board);
		}
		
	}

}

class Node {
	char val;
	Node ileri;
	Node geri;
}
